<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bytesmart.webadmin.mapper.BytesmartDeptMapper">

	<resultMap type="com.bytesmart.apisystem.domain.BytesmartDept" id="BytesmartDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="deptWeight"   column="dept_weight"   />
		<result property="deptLeader"     column="dept_leader"      />
		<result property="deptMobile"      column="dept_mobile"       />
		<result property="deptEmail"      column="dept_email"       />
		<result property="deptStatus"     column="dept_status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<sql id="selectDeptVo">
        select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.dept_weight, d.dept_leader, d.dept_mobile, d.dept_email, d.dept_status, d.del_flag, d.create_by, d.create_time
        from bytesmart_dept d
    </sql>

	<select id="selectDeptList" parameterType="com.bytesmart.apisystem.domain.BytesmartDept" resultMap="BytesmartDeptResult">
		<include refid="selectDeptVo"/>
		where d.del_flag = '0'
		<if test="deptId != null and deptId != 0">
			AND dept_id = #{deptId}
		</if>
		<if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>

		<if test="deptStatus != null and deptStatus != ''">
			AND dept_status = #{deptStatus}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.dept_weight
	</select>

	<select id="selectDeptById" parameterType="Long" resultMap="BytesmartDeptResult">
		<include refid="selectDeptVo"/>
		where dept_id = #{deptId}
	</select>

	<update id="updateDept" parameterType="com.bytesmart.apisystem.domain.BytesmartDept">
		update bytesmart_dept
		<set>
			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
			<if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
			<if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
			<if test="deptWeight != null">dept_weight = #{deptWeight},</if>
			<if test="deptLeader != null">dept_leader = #{deptLeader},</if>
			<if test="deptMobile != null">dept_mobile = #{deptMobile},</if>
			<if test="deptEmail != null">dept_email = #{deptEmail},</if>
			<if test="deptStatus != null and deptStatus != ''">dept_status = #{deptStatus},</if>
			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			update_time = sysdate()
		</set>
		where dept_id = #{deptId}
	</update>

	<insert id="insertDept" parameterType="com.bytesmart.apisystem.domain.BytesmartDept">
		insert into bytesmart_dept(
		<if test="deptId != null and deptId != 0">dept_id,</if>
		<if test="parentId != null and parentId != 0">parent_id,</if>
		<if test="deptName != null and deptName != ''">dept_name,</if>
		<if test="ancestors != null and ancestors != ''">ancestors,</if>
		<if test="deptWeight != null">dept_weight,</if>
		<if test="deptLeader != null and deptLeader != ''">dept_leader,</if>
		<if test="deptMobile != null and deptMobile != ''">dept_mobile,</if>
		<if test="deptEmail != null and deptEmail  != ''">dept_email,</if>
		<if test="deptStatus != null">dept_status,</if>
		<if test="createBy != null and createBy != ''">create_by,</if>
		create_time
	)values(
		<if test="deptId != null and deptId != 0">#{deptId},</if>
		<if test="parentId != null and parentId != 0">#{parentId},</if>
		<if test="deptName != null and deptName != ''">#{deptName},</if>
		<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
		<if test="deptWeight != null">#{deptWeight},</if>
		<if test="deptLeader != null and deptLeader != ''">#{deptLeader},</if>
		<if test="deptMobile != null and deptMobile != ''">#{deptMobile},</if>
		<if test="deptEmail != null and deptEmail != ''">#{deptEmail},</if>
		<if test="deptStatus != null">#{deptStatus},</if>
		<if test="createBy != null and createBy != ''">#{createBy},</if>
		sysdate()
		)
	</insert>

	<delete id="deleteDeptById" parameterType="Long">
		update bytesmart_dept set del_flag = '2' where dept_id = #{deptId}
	</delete>


	<select id="selectDeptListByRoleId" resultType="Long">
		select d.dept_id
		from bytesmart_dept d
		left join bytesmart_role_dept rd on d.dept_id = rd.dept_id
		where rd.role_id = #{roleId}
		<if test="deptCheckStrictly">
			and d.dept_id not in (select d.parent_id from bytesmart_dept d inner join bytesmart_role_dept rd on d.dept_id = rd.dept_id and rd.role_id = #{roleId})
		</if>
		order by d.parent_id, d.dept_weight
	</select>

	<select id="hasChildByDeptId" parameterType="Long" resultType="int">
		select count(1) from bytesmart_dept
		where del_flag = '0' and parent_id = #{deptId} limit 1
	</select>

	<select id="checkDeptExistEmployee" parameterType="Long" resultType="int">
		select count(1) from bytesmart_employee where dept_id = #{deptId} and del_flag = '0'
	</select>

	<select id="checkDeptNameUnique" resultMap="BytesmartDeptResult">
		<include refid="selectDeptVo"/>
		where dept_name=#{deptName} and parent_id = #{parentId} and del_flag = '0' limit 1
	</select>

	<select id="selectNormalChildrenDeptById" parameterType="Long" resultType="int">
		select count(*) from bytesmart_dept where dept_status, = 0 and del_flag = '0' and find_in_set(#{deptId}, ancestors)
	</select>


	<update id="updateDeptStatusNormal" parameterType="Long">
		update bytesmart_dept set dept_status = '0'where dept_id in
		<foreach collection="array" item="deptId" open="(" separator="," close=")">
			#{deptId}
		</foreach>
	</update>

	<select id="selectChildrenDeptById" parameterType="Long" resultMap="BytesmartDeptResult">
		select * from bytesmart_dept where find_in_set(#{deptId}, ancestors)
	</select>

	<update id="updateDeptChildren" parameterType="java.util.List">
		update bytesmart_dept set ancestors =
		<foreach collection="depts" item="item" index="index"
				 separator=" " open="case dept_id" close="end">
			when #{item.deptId} then #{item.ancestors}
		</foreach>
		where dept_id in
		<foreach collection="depts" item="item" index="index"
				 separator="," open="(" close=")">
			#{item.deptId}
		</foreach>
	</update>

</mapper> 
